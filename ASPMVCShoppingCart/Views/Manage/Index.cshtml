@using PagedList.Mvc; @*//import this so we get our HTML Helper*@
@using PagedList; @*//import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@model IPagedList<ASPMVCShoppingCart.Models.tblProduct>
@{Layout = "~/Views/Shared/_Layout.cshtml";} @*Use custom layout*@
@{
    ViewBag.Title = "Manage";
}

@*Heading*@
<h2 class="wow pulse">Manage Products</h2>

<p class="wow slideInLeft">
    @Html.ActionLink("Add New", "Create")
</p>

@*Products*@
<table class="table table-striped table-hover wow slideInLeft" style=" width:40%;">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th>Actions</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                £ @Html.DisplayFor(modelItem => item.Price) 
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-default" }) 
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
            </td>
        </tr>
    }

</table>

<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@Html.PagedListPager(Model, Page => Url.Action("Index", new { Page}))